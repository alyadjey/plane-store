{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport planesService from \"../services/planesService\";\nexport const getPlane = createAsyncThunk(\"GET_PLANE\", async (id, thunkAPI) => {\n  try {\n    return await planesService.getPlane(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nexport const createPlane = createAsyncThunk(\"CREATE_PLANE\", async (planeData, thunkAPI) => {\n  try {\n    return await planesService.createPlane(planeData);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nconst planeSlice = createSlice({\n  name: \"plane\",\n  initialState: {\n    plane: null,\n    isError: false,\n    isLoading: false,\n    message: \"\",\n    errors: null\n  },\n  reducers: {\n    resetPlaneErrors: state => {\n      state.errors = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getPlane.pending, state => {\n      state.isLoading = true;\n    }).addCase(getPlane.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.plane = action.payload[0];\n    }).addCase(getPlane.rejected, (state, action) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.message = action.payload.message;\n      state.plane = null;\n    }).addCase(createPlane.pending, state => {\n      state.isLoading = true;\n      state.errors = null;\n    }).addCase(createPlane.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.errors = null;\n    }).addCase(createPlane.rejected, (state, action) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.errors = action.payload;\n    });\n  }\n});\nexport const {\n  resetPlaneErrors\n} = planeSlice.actions;\nexport default planeSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","planesService","getPlane","id","thunkAPI","error","rejectWithValue","response","data","createPlane","planeData","planeSlice","name","initialState","plane","isError","isLoading","message","errors","reducers","resetPlaneErrors","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["D:/PROJECTS/plane-store/client/src/store/plane/planeSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport planesService from \"../services/planesService\";\r\n\r\nexport const getPlane = createAsyncThunk(\"GET_PLANE\", async (id, thunkAPI) => {\r\n  try {\r\n    return await planesService.getPlane(id);\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nexport const createPlane = createAsyncThunk(\r\n  \"CREATE_PLANE\",\r\n  async (planeData, thunkAPI) => {\r\n    try {\r\n      return await planesService.createPlane(planeData);\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error.response.data);\r\n    }\r\n  }\r\n);\r\n\r\nconst planeSlice = createSlice({\r\n  name: \"plane\",\r\n  initialState: {\r\n    plane: null,\r\n    isError: false,\r\n    isLoading: false,\r\n    message: \"\",\r\n    errors: null,\r\n  },\r\n  reducers: {\r\n    resetPlaneErrors: (state) => {\r\n      state.errors = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getPlane.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getPlane.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.plane = action.payload[0];\r\n      })\r\n      .addCase(getPlane.rejected, (state, action) => {\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n        state.message = action.payload.message;\r\n        state.plane = null;\r\n      })\r\n      .addCase(createPlane.pending, (state) => {\r\n        state.isLoading = true;\r\n        state.errors = null;\r\n      })\r\n      .addCase(createPlane.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.errors = null;\r\n      })\r\n      .addCase(createPlane.rejected, (state, action) => {\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n        state.errors = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { resetPlaneErrors } = planeSlice.actions;\r\nexport default planeSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}