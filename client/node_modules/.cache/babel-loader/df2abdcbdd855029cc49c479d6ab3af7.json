{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport planesService from \"../services/planesService\";\nexport const getPlanes = createAsyncThunk(\"GET_PLANES\", async (_, thunkAPI) => {\n  try {\n    return await planesService.getPlanes();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error.response.data);\n  }\n});\nconst planesSlice = createSlice({\n  name: \"planes\",\n  initialState: {\n    planes: null,\n    isError: false,\n    isLoading: false,\n    message: \"\"\n  },\n  extraReducers: builder => {\n    builder.addCase(getPlanes.pending, state => {\n      state.isLoading = true;\n    }).addCase(getPlanes.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.planes = action.payload;\n    }).addCase(getPlanes.rejected, (state, action) => {\n      state.isError = true;\n      state.isLoading = false;\n      state.message = action.payload.message;\n      state.planes = null;\n    });\n  }\n});\nexport default planesSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","planesService","getPlanes","_","thunkAPI","error","rejectWithValue","response","data","planesSlice","name","initialState","planes","isError","isLoading","message","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/PROJECTS/plane-store/client/src/store/planes/planesSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport planesService from \"../services/planesService\";\r\n\r\nexport const getPlanes = createAsyncThunk(\"GET_PLANES\", async (_, thunkAPI) => {\r\n  try {\r\n    return await planesService.getPlanes();\r\n  } catch (error) {\r\n    return thunkAPI.rejectWithValue(error.response.data);\r\n  }\r\n});\r\n\r\nconst planesSlice = createSlice({\r\n  name: \"planes\",\r\n  initialState: {\r\n    planes: null,\r\n    isError: false,\r\n    isLoading: false,\r\n    message: \"\",\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getPlanes.pending, (state) => {\r\n        state.isLoading = true;\r\n      })\r\n      .addCase(getPlanes.fulfilled, (state, action) => {\r\n        state.isLoading = false;\r\n        state.planes = action.payload;\r\n      })\r\n      .addCase(getPlanes.rejected, (state, action) => {\r\n        state.isError = true;\r\n        state.isLoading = false;\r\n        state.message = action.payload.message;\r\n        state.planes = null;\r\n      });\r\n  },\r\n});\r\n\r\nexport default planesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAEA,OAAO,MAAMC,SAAS,GAAGF,gBAAgB,CAAC,YAAD,EAAe,OAAOG,CAAP,EAAUC,QAAV,KAAuB;EAC7E,IAAI;IACF,OAAO,MAAMH,aAAa,CAACC,SAAd,EAAb;EACD,CAFD,CAEE,OAAOG,KAAP,EAAc;IACd,OAAOD,QAAQ,CAACE,eAAT,CAAyBD,KAAK,CAACE,QAAN,CAAeC,IAAxC,CAAP;EACD;AACF,CANwC,CAAlC;AAQP,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAE,QADwB;EAE9BC,YAAY,EAAE;IACZC,MAAM,EAAE,IADI;IAEZC,OAAO,EAAE,KAFG;IAGZC,SAAS,EAAE,KAHC;IAIZC,OAAO,EAAE;EAJG,CAFgB;EAQ9BC,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWhB,SAAS,CAACiB,OADrB,EAC+BC,KAAD,IAAW;MACrCA,KAAK,CAACN,SAAN,GAAkB,IAAlB;IACD,CAHH,EAIGI,OAJH,CAIWhB,SAAS,CAACmB,SAJrB,EAIgC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC/CF,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACR,MAAN,GAAeU,MAAM,CAACC,OAAtB;IACD,CAPH,EAQGL,OARH,CAQWhB,SAAS,CAACsB,QARrB,EAQ+B,CAACJ,KAAD,EAAQE,MAAR,KAAmB;MAC9CF,KAAK,CAACP,OAAN,GAAgB,IAAhB;MACAO,KAAK,CAACN,SAAN,GAAkB,KAAlB;MACAM,KAAK,CAACL,OAAN,GAAgBO,MAAM,CAACC,OAAP,CAAeR,OAA/B;MACAK,KAAK,CAACR,MAAN,GAAe,IAAf;IACD,CAbH;EAcD;AAvB6B,CAAD,CAA/B;AA0BA,eAAeH,WAAW,CAACgB,OAA3B"},"metadata":{},"sourceType":"module"}